<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shopMapper">
   

<select id="list" resultType="com.daily.vo.GoodsViewVO">
select
    g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate, g.gdsImg, g.gdsThumbImg
        from goods g
            inner join goods_category c
                on g.cateCode = c.cateCode           
            where g.cateCode = #{cateCode}
</select>


<!-- 카테고리별 상품 리스트 : 1차 분류 -->
<select id="list_1" resultType="com.daily.vo.GoodsViewVO">
select
    g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName,
    gdsPrice, gdsStock, gdsDes, gdsDate, g.gdsImg, g.gdsThumbImg
        from goods g
            inner join goods_category c
                on g.cateCode = c.cateCode           
            where g.cateCode = #{cateCode}
             or c.cateCodeRef = #{cateCodeRef}
</select>

<!-- 카테고리별 상품 리스트 : 2차 분류 -->
<select id="list_2" resultType="com.daily.vo.GoodsViewVO">
select
    g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName,
    gdsPrice, gdsStock, gdsDes, gdsDate, g.gdsImg, g.gdsThumbImg
        from goods g
            inner join goods_category c
                on g.cateCode = c.cateCode           
            where g.cateCode = #{cateCode}
</select>

<!-- 상품 소감(댓글) 작성 -->
<insert id="registReply">
 insert into reply (gdsNum, userid, repNum, repCon)
     values (#{gdsNum}, #{userid}, reply_seq.nextval, #{repCon})
</insert>

<!-- 상품 소감(댓글) 리스트 -->
<select id="replyList" resultType="com.daily.vo.ReplyVO">
 select
     r.gdsNum, r.userid, r.repNum, r.repCon, r.repDate
 from reply r
     inner join member m
         on r.userid = m.userid
     where gdsNum = #{gdsNum}
</select>

<!-- 상품 소감(댓글) 삭제 -->
<delete id="deleteReply">
 delete reply
     where repNum = #{repNum}
         and userid = #{userid}
</delete>

<!-- 아이디 체크 -->
<select id="replyUserIdCheck" resultType="String">
 select userid
  from reply
      where repNum = #{repNum}
</select>


<!-- 상품 소감(댓글) 수정 -->
<update id="modifyReply">
 update reply
     set
         repCon = #{repCon}
     where repNum = #{repNum}
         and userid = #{userid}
</update>

<!-- 카트 담기 -->
<insert id="addCart">
 insert into cart (cartNum, userid, gdsNum, cartStock)
     values (cart_seq.nextval, #{userid}, #{gdsNum}, #{cartStock})
</insert>

<!-- 카트 리스트 -->
<select id="cartList" resultType="com.daily.vo.CartListVO">
 select
     row_number() over(order by c.cartNum desc) as num,
     c.cartNum, c.userid, c.gdsNum, c.cartStock, c.addDate,
     g.gdsName, g.gdsPrice, g.gdsThumbImg
 from cart c
     inner join goods g
         on c.gdsNum = g.gdsNum   
     where c.userid = #{userid}
</select>

<!-- 카트 삭제 -->
<delete id="deleteCart">
 delete cart
     where cartNum = #{cartNum}
         and userid = #{userid}
</delete>

<!-- 주문 정보 -->
<insert id="orderInfo">
 insert into daily_order(orderid, userid, orderRec, userAddr1, userAddr2, userAddr3, orderPhon, amount)
     values(#{orderid}, #{userid}, #{orderRec}, #{userAddr1}, #{userAddr2}, #{userAddr3}, #{orderPhon}, #{amount})
</insert>
   
<!-- 주문 상세 정보 --> 
<insert id="orderInfo_Details">
 insert into order_details(orderDetailsNum, orderid, gdsNum, cartStock)
     select order_details_seq.nextval, #{orderid}, gdsNum, cartStock
         from cart   
</insert> 

<!-- 카트 비우기 -->
<delete id="cartAllDelete">
 delete cart
     where userid = #{userid}
</delete>

<!-- 특정 유저의 주문 목록 -->
<select id="orderList" resultType="com.daily.vo.OrderVO">
 select
     orderid, userid, orderRec, userAddr1, userAddr2, userAddr3, orderPhon, amount, orderDate, delivery
 from daily_order 
     where userid = #{userid}
</select>

<!-- 특정 주문 목록 -->
<select id="orderView" resultType="com.daily.vo.OrderListVO">
 select
     o.orderid, o.userid, o.orderRec, o.userAddr1, o.userAddr2, o.userAddr3, o.orderPhon, o.amount, o.orderDate,
     o.delivery, d.orderDetailsNum, d.gdsNum, d.cartStock,
     g.gdsName, g.gdsThumbImg, g.gdsPrice
 from daily_order o
         inner join order_details d
             on o.orderid = d.orderid
         inner join goods g
             on d.gdsNum = g.gdsNum
     where o.userid = #{userid}
         and o.orderid = #{orderid}
</select>

</mapper>