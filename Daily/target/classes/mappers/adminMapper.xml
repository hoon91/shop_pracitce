<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="adminMapper">
	
	
	<select id="list" resultType="com.daily.vo.MemberVO">
		SELECT * FROM member WHERE userid NOT IN ('admin') ORDER BY regDate DESC
	</select>
	
	
	<!-- 카테고리 호출 -->
	<select id="category" resultType="com.daily.vo.CategoryVO">
		select
		level, cateName, cateCode, cateCodeRef
		from goods_category
		start with cateCodeRef is null connect by prior cateCode = cateCodeRef
	</select>
	
	<!-- 상품 등록 -->
	<insert id="register">
 insert into goods (gdsNum, gdsName, cateCode, gdsPrice, gdsStock, gdsDes,
       gdsImg, gdsThumbImg)
     values (goods_seq.nextval, #{gdsName}, #{cateCode}, #{gdsPrice}, #{gdsStock}, #{gdsDes},
        #{gdsImg}, #{gdsThumbImg})
</insert>

	<!-- 상품 목록  
	<select id="goodslist" resultType="com.daily.vo.GoodsVO">
 		select
  			gdsNum, gdsName, cateCode, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate
    	from goods
        order by gdsNum desc
	</select>-->
<select id="goodslist" resultType="com.daily.vo.GoodsViewVO">
select
     g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate,
     g.gdsImg, g.gdsThumbImg
         from goods g
             inner join goods_category c
                 on g.cateCode = c.cateCode
</select>

	<!-- 상품 조회
<select id="goodsView" resultType="com.daily.vo.GoodsVO">
	select gdsNum, gdsName, cateCode, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate
	from goods
	where gdsNum = #{gdsNum}
</select> -->


	<!-- 상품 조회 
<select id="goodsView" resultType="com.daily.vo.GoodsViewVO">
 select
     g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate
         from goods g
             inner join goods_category c
                 on g.cateCode = c.cateCode          
            where g.gdsNum = #{gdsNum}
</select>-->

<!-- 상품 조회 + 카테고리 조인-->
<select id="goodsView" resultType="com.daily.vo.GoodsViewVO">
 select
     g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate,
     g.gdsImg, g.gdsThumbImg
         from goods g
             inner join goods_category c
                 on g.cateCode = c.cateCode           
            where g.gdsNum = #{gdsNum}
</select>

<!-- 상품 수정 -->
<update id="goodsModify">
 update goods
     set
         gdsName = #{gdsName},
         cateCode = #{cateCode},
         gdsPrice = #{gdsPrice},
         gdsStock = #{gdsStock},
         gdsDes = #{gdsDes},
         gdsImg = #{gdsImg},
         gdsThumbImg = #{gdsThumbImg}
     where gdsNum = ${gdsNum}
</update>


<!-- 상품 삭제 -->
<delete id="goodsDelete">
 delete
     goods
 where gdsNum = #{gdsNum}
</delete>


<!-- 모든 유저의 주문 목록 -->
<select id="orderList" resultType="com.daily.vo.OrderVO">
 select
     orderid, userid, orderRec,
     userAddr1, userAddr2, userAddr3,
     orderPhon, amount, orderDate, delivery
 from daily_order
</select>

<!-- 특정 주문 목록 -->
<select id="orderView" resultType="com.daily.vo.OrderListVO">
 select
     o.orderid, o.userid, o.orderRec,
     o.userAddr1, o.userAddr2, o.userAddr3,
     o.orderPhon, o.amount, o.orderDate, o.delivery,
     d.orderDetailsNum, d.gdsNum, d.cartStock,
     g.gdsName, g.gdsThumbImg, g.gdsPrice
 from daily_order o
         inner join order_details d
             on o.orderid = d.orderid
         inner join goods g
             on d.gdsNum = g.gdsNum
     where o.orderid = #{orderid}
</select>


<!-- 배송 상태 -->
<update id="delivery">
 update daily_order
     set delivery = #{delivery}
 where orderid = #{orderid}
</update>

<!-- 상품 수량 조절 -->
<update id="changeStock">
 update goods
     set gdsStock = gdsStock - #{gdsStock}
 where gdsNum = #{gdsNum}
</update>

<!--  모든 소감(댓글) -->
<select id="allReply" resultType="com.daily.vo.ReplyListVO">
 select
     r.gdsNum, r.userid, r.repNum, r.repCon, r.repDate,
     m.userName
 from reply r
      inner join member m
         on r.userid = m.userid
</select>

<!-- 소감(댓글) 지우기 -->
<delete id="deleteReply">
 delete reply
     where repNum = #{repNum}
</delete>




</mapper>